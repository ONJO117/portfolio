<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.root.board.mapper.BoardMapper">

<!-- 	// 1-1. 리스트 -->
	<select id="list" resultType="com.root.board.vo.BoardVO">
	select no, title, writer, writeDate, hit
	from(	
		select rownum rnum, no, title, writer, writeDate, hit
		from(	
			select no, title, writer, writeDate, hit
			from board
			<include refid="search" />
			order by no desc
		)
	)
	where rnum between #{startRow} and #{endRow}
	</select>
	<!-- 	// 1-2. 전체 데이터 갯수 -->
	<select id="getTotalRow" resultType="long">
		select count(*) from 
		board
		<include refid="search" />
	</select>
	
	<!-- 검색 조건을 위한 태그 - 부분 태그 : sql :: 동적 쿼리 작성 -->
	<sql id="search">
		<if test="word != null and word != ''.toString">
		where
		<if test="key == 't'.toString()">
			title like '%' || #{word} || '%'
		</if>
		<if test="key == 'c'.toString()">
			content like '%' || #{word} || '%'
		</if>
		<if test="key == 'w'.toString()">
			writer like '%' || #{word} || '%'
		</if>
		<if test="key == 'tc'.toString()">
			title like '%' || #{word} || '%' or content  like '%' || #{word} || '%'
		</if>
		<if test="key == 'tw'.toString()">
			title like '%' || #{word} || '%' or writer  like '%' || #{word} || '%'
		</if>
		<if test="key == 'cw'.toString()">
			content like '%' || #{word} || '%' or writer  like '%' || #{word} || '%'
		</if>
		<if test="key == 'tcw'.toString()">
			title like '%' || #{word} || '%' or content  like '%' || #{word} || '%' or writer  like '%' || #{word} || '%'
		</if>
		</if>
	</sql>
	
	<!-- 	// 2-1. 보기 -->
	<select id="view" resultType="com.root.board.vo.BoardVO">
		select no, title, content, writer, writeDate, hit
		from board
		where no = #{no}
	</select>
	<!-- 	// 2-2. 조회수 1증가 -->
	<update id="increase">
		update board
		set hit = hit + 1
		where no = #{no}
	</update>
	<!-- 	// 3. 글쓰기 -->
	<insert id="write">
		insert into board(no, title, content, writer, pw)
		values(board_seq.nextval, #{title}, #{content}, #{writer}, #{pw})
	</insert>
	
	<!-- 	// 4. 수정 -->
	<update id="update">
		update board set title = #{title}, content = #{content}, writer = #{writer}
		where no = #{no} and pw = #{pw}
	</update>
	
	<!-- 	// 5. 삭제 -->
	<delete id="delete">
		delete from board
		where no = #{no} and pw = #{pw}
	</delete>	
	
	<insert id="replyInsert" parameterType="com.root.board.vo.ReplyVO">
		insert into board_rep(rno, writer, content, no)
		values(board_rep_seq.nextval, #{writer}, #{content}, #{no} )
	</insert>
	
	<select id="replySelect" resultType="com.root.board.vo.ReplyVO">
	    select * from board_rep where no = #{no} order by writeDate desc
	</select>
	<!-- 	// 5. 삭제 -->
	<delete id="replyRemove">
		delete from board_rep
		where rno = #{rno}
	</delete>	
	
</mapper>